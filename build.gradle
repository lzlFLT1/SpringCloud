/** todo Gradle 脚本本身执行所需要的配置 */
buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()

    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.0.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

subprojects {
    
    apply plugin: "java"
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot' 
    apply plugin: 'io.spring.dependency-management'


    sourceCompatibility = JavaVersion.VERSION_11        // 项目中代码使用的 JDK 版本
    targetCompatibility = JavaVersion.VERSION_11        // 编译后的 .class 文件的 JDK 版本
    version = '0.0.1'

    configurations {
        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'  // 排除掉 spring 默认的日志框架(logback)
        testCompile.exclude group: 'org.junit.vintage'  // 排除掉 Junit5 兼容 Junit4 的 jar 包
    }

    
    /** todo 定义所有项目中使用的仓库 */
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        jcenter()

    }
    
    ext {
        Author = "KaseiHaku"
        SpringBootVersion = '2.2.2.RELEASE'
        SpringCloudVersion = 'Greenwich.SR3'
        SpringDependencyManagementVersion = '1.0.8.RELEASE'
    }

    dependencyManagement {
        imports {
            mavenBom 'io.spring.platform:platform-bom:Cairo-SR4'
        }
    }
    dependencies {

        /** todo Gradle 支持的依赖方式
         * compileOnly — for dependencies that are necessary to compile your production code but shouldn’t be part of the runtime classpath
         * implementation (supersedes compile) — used for compilation and runtime
         * runtimeOnly (supersedes runtime) — only used at runtime, not for compilation
         * testCompileOnly — same as compileOnly except it’s for the tests
         * testImplementation — test equivalent of implementation
         * testRuntimeOnly — test equivalent of runtimeOnly
         * */
        
    }

} 



 


